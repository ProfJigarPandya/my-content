Divide and Conquer: Write a program to multiply TWO matrices using Strassen's Matrix Multiplication Algorithm. 


1) Work on the traditional/iterative/straightforward/SQUARE-MATRIX-MULTIPLY/for-for-for procedure for two fixed matrices. Analyze time.

2) Work on recursive solution of SQUARE-MATRIX-MULTIPLY simple thought process divide the task and conquer.

3) The Strassen's algorithm, not obvious way but ends up Theta(power(n,lg7) ) ~ n^2.8
As per the book author "Cormen and team", the key to Strassen's method is to make the recursion tree slightly less bushy. That is, instead of performing eight recursive multiplications of n/2 x n/2 matrices, it performs only seven. The cost of eliminating one matrix multiplication will be several new additions of n/2 x n/2 matrices, but still only a constant number of additions. Strassen's method is asymptotically faster than the straightforward procedure. Practical aspects can be explored more.

Lastly students can also think experimenting multiple/chained matrix multiplication.

Divide and Conquer: Write a program to multiply TWO matrices using Strassen's Matrix Multiplication Algorithm.


